// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dedup_murmurhash128_new (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        str_0_address0,
        str_0_ce0,
        str_0_q0,
        str_0_address1,
        str_0_ce1,
        str_0_q1,
        indices_address0,
        indices_ce0,
        indices_q0,
        indices_address1,
        indices_ce1,
        indices_q1,
        hash_address0,
        hash_ce0,
        hash_we0,
        hash_d0,
        hash_q0,
        hash_address1,
        hash_ce1,
        hash_we1,
        hash_d1,
        hash_q1
);

parameter    ap_ST_st1_fsm_0 = 29'b1;
parameter    ap_ST_st2_fsm_1 = 29'b10;
parameter    ap_ST_st3_fsm_2 = 29'b100;
parameter    ap_ST_st4_fsm_3 = 29'b1000;
parameter    ap_ST_st5_fsm_4 = 29'b10000;
parameter    ap_ST_st6_fsm_5 = 29'b100000;
parameter    ap_ST_st7_fsm_6 = 29'b1000000;
parameter    ap_ST_st8_fsm_7 = 29'b10000000;
parameter    ap_ST_st9_fsm_8 = 29'b100000000;
parameter    ap_ST_st10_fsm_9 = 29'b1000000000;
parameter    ap_ST_st11_fsm_10 = 29'b10000000000;
parameter    ap_ST_st12_fsm_11 = 29'b100000000000;
parameter    ap_ST_st13_fsm_12 = 29'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 29'b10000000000000;
parameter    ap_ST_pp0_stg0_fsm_14 = 29'b100000000000000;
parameter    ap_ST_pp0_stg1_fsm_15 = 29'b1000000000000000;
parameter    ap_ST_st31_fsm_16 = 29'b10000000000000000;
parameter    ap_ST_st32_fsm_17 = 29'b100000000000000000;
parameter    ap_ST_st33_fsm_18 = 29'b1000000000000000000;
parameter    ap_ST_pp1_stg0_fsm_19 = 29'b10000000000000000000;
parameter    ap_ST_pp1_stg1_fsm_20 = 29'b100000000000000000000;
parameter    ap_ST_pp1_stg2_fsm_21 = 29'b1000000000000000000000;
parameter    ap_ST_pp1_stg3_fsm_22 = 29'b10000000000000000000000;
parameter    ap_ST_st40_fsm_23 = 29'b100000000000000000000000;
parameter    ap_ST_pp2_stg0_fsm_24 = 29'b1000000000000000000000000;
parameter    ap_ST_pp2_stg1_fsm_25 = 29'b10000000000000000000000000;
parameter    ap_ST_pp2_stg2_fsm_26 = 29'b100000000000000000000000000;
parameter    ap_ST_pp2_stg3_fsm_27 = 29'b1000000000000000000000000000;
parameter    ap_ST_st48_fsm_28 = 29'b10000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv64_B = 64'b1011;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv64_D = 64'b1101;
parameter    ap_const_lv64_E = 64'b1110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv64_F = 64'b1111;
parameter    ap_const_lv64_10 = 64'b10000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv64_11 = 64'b10001;
parameter    ap_const_lv64_12 = 64'b10010;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv64_13 = 64'b10011;
parameter    ap_const_lv64_14 = 64'b10100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv64_15 = 64'b10101;
parameter    ap_const_lv64_16 = 64'b10110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv64_17 = 64'b10111;
parameter    ap_const_lv64_18 = 64'b11000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv64_19 = 64'b11001;
parameter    ap_const_lv64_1A = 64'b11010;
parameter    ap_const_lv64_1B = 64'b11011;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv7_4 = 7'b100;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_38B34AE5 = 32'b111000101100110100101011100101;
parameter    ap_const_lv32_AB0E9789 = 32'b10101011000011101001011110001001;
parameter    ap_const_lv32_239B961B = 32'b100011100110111001011000011011;
parameter    ap_const_lv32_A1E38B93 = 32'b10100001111000111000101110010011;
parameter    ap_const_lv5_F = 5'b1111;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv12_4 = 12'b100;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_561CCD1B = 32'b1010110000111001100110100011011;
parameter    ap_const_lv32_BCAA747 = 32'b1011110010101010011101000111;
parameter    ap_const_lv32_96CD1C35 = 32'b10010110110011010001110000110101;
parameter    ap_const_lv32_32AC3B17 = 32'b110010101011000011101100010111;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv32_1C = 32'b11100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] str_0_address0;
output   str_0_ce0;
input  [7:0] str_0_q0;
output  [5:0] str_0_address1;
output   str_0_ce1;
input  [7:0] str_0_q1;
output  [2:0] indices_address0;
output   indices_ce0;
input  [31:0] indices_q0;
output  [2:0] indices_address1;
output   indices_ce1;
input  [31:0] indices_q1;
output  [4:0] hash_address0;
output   hash_ce0;
output   hash_we0;
output  [31:0] hash_d0;
input  [31:0] hash_q0;
output  [4:0] hash_address1;
output   hash_ce1;
output   hash_we1;
output  [31:0] hash_d1;
input  [31:0] hash_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] str_0_address0;
reg str_0_ce0;
reg[5:0] str_0_address1;
reg str_0_ce1;
reg[2:0] indices_address0;
reg indices_ce0;
reg indices_ce1;
reg[4:0] hash_address0;
reg hash_ce0;
reg hash_we0;
reg[31:0] hash_d0;
reg[4:0] hash_address1;
reg hash_ce1;
reg hash_we1;
reg[31:0] hash_d1;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_46;
reg   [6:0] i1_reg_922;
reg   [31:0] offset3_reg_933;
reg   [11:0] i4_reg_945;
reg   [2:0] i6_reg_957;
wire   [0:0] tmp_3_fu_968_p3;
reg   [0:0] tmp_3_reg_1707;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_14;
reg    ap_sig_97;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg    ap_reg_ppiten_pp0_it6;
reg    ap_reg_ppiten_pp0_it7;
reg   [0:0] ap_reg_ppstg_tmp_3_reg_1707_pp0_iter1;
reg   [0:0] ap_reg_ppstg_tmp_3_reg_1707_pp0_iter2;
reg   [0:0] ap_reg_ppstg_tmp_3_reg_1707_pp0_iter3;
reg   [0:0] ap_reg_ppstg_tmp_3_reg_1707_pp0_iter4;
reg   [0:0] ap_reg_ppstg_tmp_3_reg_1707_pp0_iter5;
reg   [0:0] ap_reg_ppstg_tmp_3_reg_1707_pp0_iter6;
reg   [0:0] ap_reg_ppstg_tmp_3_reg_1707_pp0_iter7;
reg   [1:0] index_reg_1711;
reg   [1:0] ap_reg_ppstg_index_reg_1711_pp0_iter1;
reg   [1:0] ap_reg_ppstg_index_reg_1711_pp0_iter2;
reg   [1:0] ap_reg_ppstg_index_reg_1711_pp0_iter3;
reg   [1:0] ap_reg_ppstg_index_reg_1711_pp0_iter4;
wire   [5:0] tmp_5_fu_986_p1;
reg   [5:0] tmp_5_reg_1720;
reg   [3:0] newIndex7_reg_1736;
reg   [3:0] ap_reg_ppstg_newIndex7_reg_1736_pp0_iter1;
reg   [3:0] ap_reg_ppstg_newIndex7_reg_1736_pp0_iter2;
reg   [3:0] ap_reg_ppstg_newIndex7_reg_1736_pp0_iter3;
reg   [3:0] ap_reg_ppstg_newIndex7_reg_1736_pp0_iter4;
reg   [3:0] ap_reg_ppstg_newIndex7_reg_1736_pp0_iter5;
reg   [3:0] ap_reg_ppstg_newIndex7_reg_1736_pp0_iter6;
reg   [3:0] ap_reg_ppstg_newIndex7_reg_1736_pp0_iter7;
wire   [6:0] i_1_fu_1022_p2;
reg   [6:0] i_1_reg_1741;
reg   [7:0] str_0_load_reg_1746;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_15;
reg    ap_sig_159;
reg   [7:0] str_0_load_1_reg_1751;
wire  signed [31:0] tmp_9_fu_1092_p2;
reg  signed [31:0] tmp_9_reg_1766;
wire   [0:0] sel_tmp_fu_1098_p2;
reg   [0:0] sel_tmp_reg_1771;
reg   [0:0] ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter2;
reg   [0:0] ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter3;
reg   [0:0] ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter4;
wire   [0:0] sel_tmp1_fu_1103_p2;
reg   [0:0] sel_tmp1_reg_1777;
reg   [0:0] ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter2;
reg   [0:0] ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter3;
reg   [0:0] ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter4;
wire   [0:0] sel_tmp2_fu_1108_p2;
reg   [0:0] sel_tmp2_reg_1784;
wire   [31:0] grp_fu_1139_p2;
reg   [31:0] x_assign_reg_1795;
wire  signed [31:0] tmp_4_i_fu_1181_p2;
reg  signed [31:0] tmp_4_i_reg_1801;
wire   [0:0] sel_tmp3_fu_1187_p2;
reg   [0:0] sel_tmp3_reg_1806;
reg    ap_sig_cseq_ST_st31_fsm_16;
reg    ap_sig_223;
wire   [31:0] keys_0_q0;
reg   [31:0] keys_0_load_reg_1826;
reg    ap_sig_cseq_ST_st32_fsm_17;
reg    ap_sig_234;
wire   [31:0] keys_0_q1;
reg   [31:0] keys_0_load_1_reg_1832;
reg   [31:0] keys_0_load_2_reg_1848;
reg    ap_sig_cseq_ST_st33_fsm_18;
reg    ap_sig_248;
reg   [31:0] keys_0_load_3_reg_1854;
reg   [0:0] tmp_10_reg_1860;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_19;
reg    ap_sig_258;
reg    ap_reg_ppiten_pp1_it0;
reg    ap_reg_ppiten_pp1_it1;
reg   [0:0] ap_reg_ppstg_tmp_10_reg_1860_pp1_iter1;
wire   [31:0] p_offset3_fu_1269_p3;
reg   [31:0] p_offset3_reg_1869;
reg    ap_sig_cseq_ST_pp1_stg1_fsm_20;
reg    ap_sig_277;
wire   [3:0] tmp_35_fu_1295_p1;
reg   [3:0] tmp_35_reg_1874;
reg   [4:0] hash_addr_28_reg_1879;
reg   [4:0] hash_addr_29_reg_1889;
reg    ap_sig_cseq_ST_pp1_stg2_fsm_21;
reg    ap_sig_296;
reg   [4:0] hash_addr_30_reg_1894;
reg   [4:0] hash_addr_31_reg_1899;
wire   [0:0] tmp_16_fu_1339_p2;
reg   [0:0] tmp_16_reg_1904;
wire   [11:0] i_fu_1345_p2;
reg   [11:0] i_reg_1908;
wire   [31:0] tmp_17_fu_1378_p2;
reg   [31:0] tmp_17_reg_1913;
reg    ap_sig_cseq_ST_pp1_stg3_fsm_22;
reg    ap_sig_318;
wire   [14:0] tmp_38_fu_1388_p1;
reg   [14:0] tmp_38_reg_1919;
reg   [16:0] tmp_3_i2_reg_1924;
wire   [31:0] tmp_51_2_fu_1476_p2;
reg   [31:0] tmp_51_2_reg_1929;
wire   [31:0] tmp_51_3_fu_1508_p2;
reg   [31:0] tmp_51_3_reg_1935;
wire   [0:0] exitcond3_fu_1547_p2;
reg   [0:0] exitcond3_reg_1941;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_24;
reg    ap_sig_339;
reg    ap_reg_ppiten_pp2_it0;
reg    ap_reg_ppiten_pp2_it1;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_1941_pp2_iter1;
wire   [2:0] i_2_fu_1553_p2;
reg   [2:0] i_2_reg_1945;
wire   [4:0] tmp_33_fu_1568_p3;
reg   [4:0] tmp_33_reg_1950;
reg   [4:0] hash_addr_32_reg_1956;
reg   [4:0] hash_addr_33_reg_1961;
wire   [0:0] tmp_21_fu_1596_p2;
reg   [0:0] tmp_21_reg_1971;
reg   [4:0] hash_addr_34_reg_1981;
reg    ap_sig_cseq_ST_pp2_stg1_fsm_25;
reg    ap_sig_371;
reg   [4:0] ap_reg_ppstg_hash_addr_34_reg_1981_pp2_iter1;
reg   [4:0] hash_addr_35_reg_1986;
reg   [4:0] ap_reg_ppstg_hash_addr_35_reg_1986_pp2_iter1;
wire   [31:0] len_fu_1652_p2;
reg   [31:0] len_reg_1991;
reg   [31:0] hash_load_4_reg_1999;
reg   [31:0] hash_load_5_reg_2004;
wire   [31:0] tmp_66_1_fu_1662_p2;
reg   [31:0] tmp_66_1_reg_2009;
reg    ap_sig_cseq_ST_pp2_stg2_fsm_26;
reg    ap_sig_394;
wire   [31:0] tmp_66_2_fu_1666_p2;
reg   [31:0] tmp_66_2_reg_2014;
wire   [31:0] tmp_66_3_fu_1671_p2;
reg   [31:0] tmp_66_3_reg_2019;
wire   [31:0] tmp_26_fu_1688_p2;
reg   [31:0] tmp_26_reg_2024;
wire   [31:0] tmp_28_fu_1699_p2;
reg   [31:0] tmp_28_reg_2032;
reg    ap_sig_cseq_ST_pp2_stg3_fsm_27;
reg    ap_sig_410;
wire   [31:0] tmp_29_fu_1703_p2;
reg   [31:0] tmp_29_reg_2037;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_420;
reg    ap_sig_cseq_ST_st40_fsm_23;
reg    ap_sig_444;
reg   [3:0] keys_0_address0;
reg    keys_0_ce0;
reg    keys_0_we0;
reg   [3:0] keys_0_address1;
reg    keys_0_ce1;
reg   [6:0] i1_phi_fu_926_p4;
reg   [31:0] offset3_phi_fu_937_p4;
reg   [11:0] i4_phi_fu_949_p4;
reg   [2:0] i6_phi_fu_961_p4;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_486;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_497;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_508;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_519;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_530;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_541;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_552;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_563;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_574;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_585;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_596;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_607;
wire   [63:0] newIndex1_fu_996_p1;
wire   [63:0] newIndex3_fu_1007_p1;
wire   [63:0] newIndex5_fu_1033_p1;
wire   [63:0] newIndex6_fu_1038_p1;
wire   [63:0] newIndex8_fu_1224_p1;
wire  signed [63:0] tmp_11_fu_1236_p1;
wire  signed [63:0] tmp_15_fu_1290_p1;
wire  signed [63:0] tmp_13_fu_1277_p1;
wire   [63:0] tmp_31_cast_fu_1312_p1;
wire  signed [63:0] tmp_32_cast_fu_1323_p1;
wire  signed [63:0] tmp_33_cast1_fu_1334_p1;
wire   [63:0] tmp_42_fu_1576_p1;
wire   [63:0] tmp_44_fu_1587_p3;
wire   [63:0] tmp_20_fu_1563_p1;
wire   [63:0] tmp_23_fu_1612_p1;
wire   [63:0] tmp_46_fu_1622_p3;
wire   [63:0] tmp_48_fu_1636_p3;
wire   [31:0] tmp_18_fu_1412_p2;
wire   [31:0] tmp_53_2_fu_1523_p2;
wire   [31:0] tmp_53_1_fu_1442_p2;
wire   [31:0] tmp_53_3_fu_1540_p2;
wire   [31:0] tmp_27_fu_1694_p2;
wire   [31:0] grp_fu_1218_p2;
wire   [5:0] newIndex_fu_990_p2;
wire   [5:0] newIndex2_fu_1001_p2;
wire   [5:0] newIndex4_fu_1028_p2;
wire   [23:0] tmp_8_fu_1049_p3;
wire   [15:0] tmp_7_fu_1060_p3;
wire   [31:0] tmp_6_fu_1042_p3;
wire  signed [31:0] tmp_8_cast_fu_1056_p1;
wire  signed [16:0] tmp_10_cast_fu_1068_p1;
wire  signed [16:0] tmp_11_cast_fu_1072_p1;
wire   [16:0] tmp1_fu_1082_p2;
wire  signed [31:0] tmp21_cast_fu_1088_p1;
wire   [31:0] tmp_fu_1076_p2;
wire   [0:0] or_cond_fu_1120_p2;
wire   [31:0] newSel_fu_1113_p3;
wire   [31:0] newSel1_fu_1124_p3;
wire  signed [31:0] grp_fu_1139_p1;
wire   [4:0] tmp_18_cast_fu_1144_p1;
wire   [4:0] r_assign_fu_1147_p2;
wire   [31:0] tmp_i_fu_1153_p1;
wire   [5:0] tmp_i_cast_fu_1157_p1;
wire   [5:0] tmp_2_i_fu_1166_p2;
wire   [31:0] tmp_2_i_cast_fu_1172_p1;
wire   [31:0] tmp_3_i_fu_1176_p2;
wire   [31:0] tmp_1_i_fu_1161_p2;
wire   [0:0] or_cond1_fu_1199_p2;
wire   [31:0] newSel3_fu_1192_p3;
wire   [31:0] newSel4_fu_1203_p3;
wire  signed [31:0] grp_fu_1218_p0;
wire   [10:0] tmp_34_fu_1241_p1;
wire   [12:0] tmp_s_fu_1245_p3;
wire   [31:0] tmp_33_cast_fu_1253_p1;
wire   [0:0] tmp_12_fu_1257_p2;
wire   [31:0] offset_fu_1263_p2;
wire   [33:0] tmp_14_fu_1282_p3;
wire   [5:0] tmp_30_cast_fu_1299_p3;
wire   [5:0] tmp_30_fu_1306_p2;
wire   [5:0] tmp_31_fu_1317_p2;
wire   [5:0] tmp_32_fu_1328_p2;
wire   [31:0] x_assign_1_fu_1351_p2;
wire   [12:0] tmp_36_fu_1356_p1;
wire   [18:0] tmp_3_i1_fu_1360_p4;
wire   [31:0] tmp_4_i1_fu_1370_p3;
wire   [31:0] x_assign_2_fu_1383_p2;
wire   [31:0] tmp2_fu_1407_p2;
wire   [31:0] tmp_37_fu_1402_p2;
wire   [31:0] tmp_4_i2_fu_1419_p3;
wire   [31:0] tmp_51_1_fu_1425_p2;
wire   [31:0] tmp3_fu_1436_p2;
wire   [31:0] tmp_39_fu_1430_p2;
wire   [31:0] x_assign_3_fu_1449_p2;
wire   [16:0] tmp_40_fu_1454_p1;
wire   [14:0] tmp_3_i3_fu_1458_p4;
wire   [31:0] tmp_4_i3_fu_1468_p3;
wire   [31:0] x_assign_4_fu_1481_p2;
wire   [18:0] tmp_50_fu_1486_p1;
wire   [12:0] tmp_3_i4_fu_1490_p4;
wire   [31:0] tmp_4_i4_fu_1500_p3;
wire   [31:0] tmp4_fu_1518_p2;
wire   [31:0] tmp_41_fu_1513_p2;
wire   [31:0] tmp5_fu_1535_p2;
wire   [31:0] tmp_51_fu_1530_p2;
wire   [4:0] tmp_43_fu_1581_p2;
wire   [3:0] i6_cast_fu_1559_p1;
wire   [3:0] tmp_22_fu_1602_p2;
wire  signed [31:0] tmp_54_cast_fu_1608_p1;
wire   [4:0] tmp_45_fu_1617_p2;
wire   [4:0] tmp_47_fu_1631_p2;
wire   [31:0] tmp_24_fu_1645_p3;
wire   [31:0] tmp_25_fu_1658_p2;
wire   [31:0] tmp6_fu_1676_p2;
wire   [31:0] tmp7_fu_1682_p2;
reg    ap_sig_cseq_ST_st48_fsm_28;
reg    ap_sig_1193;
reg   [28:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
#0 ap_reg_ppiten_pp0_it6 = 1'b0;
#0 ap_reg_ppiten_pp0_it7 = 1'b0;
#0 ap_reg_ppiten_pp1_it0 = 1'b0;
#0 ap_reg_ppiten_pp1_it1 = 1'b0;
#0 ap_reg_ppiten_pp2_it0 = 1'b0;
#0 ap_reg_ppiten_pp2_it1 = 1'b0;
end

dedup_murmurhash128_new_keys_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
keys_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(keys_0_address0),
    .ce0(keys_0_ce0),
    .we0(keys_0_we0),
    .d0(grp_fu_1218_p2),
    .q0(keys_0_q0),
    .address1(keys_0_address1),
    .ce1(keys_0_ce1),
    .q1(keys_0_q1)
);

dedup_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dedup_mul_32s_32s_32_6_U241(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_reg_1766),
    .din1(grp_fu_1139_p1),
    .ce(1'b1),
    .dout(grp_fu_1139_p2)
);

dedup_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dedup_mul_32s_32s_32_6_U242(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1218_p0),
    .din1(tmp_4_i_reg_1801),
    .ce(1'b1),
    .dout(grp_fu_1218_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & ~(tmp_3_fu_968_p3 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15) & (tmp_3_reg_1707 == 1'b0))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) | ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15) & ~(tmp_3_reg_1707 == 1'b0)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
            ap_reg_ppiten_pp0_it7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg2_fsm_21) & (~(1'b0 == tmp_10_reg_1860) | ((1'b0 == tmp_10_reg_1860) & ~(1'b0 == tmp_16_fu_1339_p2))))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_18)) begin
            ap_reg_ppiten_pp1_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg3_fsm_22) & ~(~(1'b0 == tmp_10_reg_1860) | ((1'b0 == tmp_10_reg_1860) & ~(1'b0 == tmp_16_reg_1904))))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b1;
        end else if (((1'b1 == ap_sig_cseq_ST_st33_fsm_18) | ((1'b1 == ap_sig_cseq_ST_pp1_stg3_fsm_22) & (~(1'b0 == tmp_10_reg_1860) | ((1'b0 == tmp_10_reg_1860) & ~(1'b0 == tmp_16_reg_1904)))))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & ~(1'b0 == exitcond3_fu_1547_p2))) begin
            ap_reg_ppiten_pp2_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_23)) begin
            ap_reg_ppiten_pp2_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond3_reg_1941) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27))) begin
            ap_reg_ppiten_pp2_it1 <= 1'b1;
        end else if (((1'b1 == ap_sig_cseq_ST_st40_fsm_23) | ((1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27) & ~(1'b0 == exitcond3_reg_1941)))) begin
            ap_reg_ppiten_pp2_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        i1_reg_922 <= ap_const_lv7_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp0_it1) & (tmp_3_reg_1707 == 1'b0))) begin
        i1_reg_922 <= i_1_reg_1741;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_18)) begin
        i4_reg_945 <= ap_const_lv12_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == tmp_10_reg_1860) & (1'b0 == tmp_16_reg_1904))) begin
        i4_reg_945 <= i_reg_1908;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == exitcond3_reg_1941))) begin
        i6_reg_957 <= i_2_reg_1945;
    end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_23)) begin
        i6_reg_957 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_18)) begin
        offset3_reg_933 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == tmp_10_reg_1860) & (1'b0 == tmp_16_reg_1904))) begin
        offset3_reg_933 <= p_offset3_reg_1869;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24)) begin
        ap_reg_ppstg_exitcond3_reg_1941_pp2_iter1 <= exitcond3_reg_1941;
        exitcond3_reg_1941 <= exitcond3_fu_1547_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp2_stg1_fsm_25)) begin
        ap_reg_ppstg_hash_addr_34_reg_1981_pp2_iter1[4 : 2] <= hash_addr_34_reg_1981[4 : 2];
        ap_reg_ppstg_hash_addr_35_reg_1986_pp2_iter1[4 : 2] <= hash_addr_35_reg_1986[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14)) begin
        ap_reg_ppstg_index_reg_1711_pp0_iter1 <= index_reg_1711;
        ap_reg_ppstg_index_reg_1711_pp0_iter2 <= ap_reg_ppstg_index_reg_1711_pp0_iter1;
        ap_reg_ppstg_index_reg_1711_pp0_iter3 <= ap_reg_ppstg_index_reg_1711_pp0_iter2;
        ap_reg_ppstg_index_reg_1711_pp0_iter4 <= ap_reg_ppstg_index_reg_1711_pp0_iter3;
        ap_reg_ppstg_newIndex7_reg_1736_pp0_iter1 <= newIndex7_reg_1736;
        ap_reg_ppstg_newIndex7_reg_1736_pp0_iter2 <= ap_reg_ppstg_newIndex7_reg_1736_pp0_iter1;
        ap_reg_ppstg_newIndex7_reg_1736_pp0_iter3 <= ap_reg_ppstg_newIndex7_reg_1736_pp0_iter2;
        ap_reg_ppstg_newIndex7_reg_1736_pp0_iter4 <= ap_reg_ppstg_newIndex7_reg_1736_pp0_iter3;
        ap_reg_ppstg_newIndex7_reg_1736_pp0_iter5 <= ap_reg_ppstg_newIndex7_reg_1736_pp0_iter4;
        ap_reg_ppstg_newIndex7_reg_1736_pp0_iter6 <= ap_reg_ppstg_newIndex7_reg_1736_pp0_iter5;
        ap_reg_ppstg_newIndex7_reg_1736_pp0_iter7 <= ap_reg_ppstg_newIndex7_reg_1736_pp0_iter6;
        ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter2 <= sel_tmp1_reg_1777;
        ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter3 <= ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter2;
        ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter4 <= ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter3;
        ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter2 <= sel_tmp_reg_1771;
        ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter3 <= ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter2;
        ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter4 <= ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter3;
        ap_reg_ppstg_tmp_3_reg_1707_pp0_iter1 <= tmp_3_reg_1707;
        ap_reg_ppstg_tmp_3_reg_1707_pp0_iter2 <= ap_reg_ppstg_tmp_3_reg_1707_pp0_iter1;
        ap_reg_ppstg_tmp_3_reg_1707_pp0_iter3 <= ap_reg_ppstg_tmp_3_reg_1707_pp0_iter2;
        ap_reg_ppstg_tmp_3_reg_1707_pp0_iter4 <= ap_reg_ppstg_tmp_3_reg_1707_pp0_iter3;
        ap_reg_ppstg_tmp_3_reg_1707_pp0_iter5 <= ap_reg_ppstg_tmp_3_reg_1707_pp0_iter4;
        ap_reg_ppstg_tmp_3_reg_1707_pp0_iter6 <= ap_reg_ppstg_tmp_3_reg_1707_pp0_iter5;
        ap_reg_ppstg_tmp_3_reg_1707_pp0_iter7 <= ap_reg_ppstg_tmp_3_reg_1707_pp0_iter6;
        tmp_3_reg_1707 <= i1_phi_fu_926_p4[ap_const_lv32_6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19)) begin
        ap_reg_ppstg_tmp_10_reg_1860_pp1_iter1 <= tmp_10_reg_1860;
        tmp_10_reg_1860 <= i4_phi_fu_949_p4[ap_const_lv32_B];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20) & (1'b0 == tmp_10_reg_1860))) begin
        hash_addr_28_reg_1879[4 : 2] <= tmp_15_fu_1290_p1[4 : 2];
        tmp_35_reg_1874 <= tmp_35_fu_1295_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_10_reg_1860) & (1'b1 == ap_sig_cseq_ST_pp1_stg2_fsm_21))) begin
        hash_addr_29_reg_1889[4 : 2] <= tmp_31_cast_fu_1312_p1[4 : 2];
        hash_addr_30_reg_1894[4 : 2] <= tmp_32_cast_fu_1323_p1[4 : 2];
        hash_addr_31_reg_1899[4 : 2] <= tmp_33_cast1_fu_1334_p1[4 : 2];
        tmp_16_reg_1904 <= tmp_16_fu_1339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b0 == exitcond3_fu_1547_p2))) begin
        hash_addr_32_reg_1956[4 : 2] <= tmp_42_fu_1576_p1[4 : 2];
        hash_addr_33_reg_1961[4 : 2] <= tmp_44_fu_1587_p3[4 : 2];
        tmp_21_reg_1971 <= tmp_21_fu_1596_p2;
        tmp_33_reg_1950[4 : 2] <= tmp_33_fu_1568_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg1_fsm_25) & (1'b0 == exitcond3_reg_1941))) begin
        hash_addr_34_reg_1981[4 : 2] <= tmp_46_fu_1622_p3[4 : 2];
        hash_addr_35_reg_1986[4 : 2] <= tmp_48_fu_1636_p3[4 : 2];
        len_reg_1991 <= len_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg1_fsm_25) & (1'b0 == exitcond3_reg_1941))) begin
        hash_load_4_reg_1999 <= hash_q0;
        hash_load_5_reg_2004 <= hash_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp0_it0) & (tmp_3_fu_968_p3 == 1'b0))) begin
        i_1_reg_1741 <= i_1_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it0))) begin
        i_2_reg_1945 <= i_2_fu_1553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b0 == tmp_10_reg_1860) & (1'b1 == ap_sig_cseq_ST_pp1_stg2_fsm_21) & (1'b0 == tmp_16_fu_1339_p2))) begin
        i_reg_1908 <= i_fu_1345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (tmp_3_fu_968_p3 == 1'b0))) begin
        index_reg_1711 <= {{i1_phi_fu_926_p4[ap_const_lv32_3 : ap_const_lv32_2]}};
        newIndex7_reg_1736 <= {{i1_phi_fu_926_p4[ap_const_lv32_5 : ap_const_lv32_2]}};
        tmp_5_reg_1720 <= tmp_5_fu_986_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_17)) begin
        keys_0_load_1_reg_1832 <= keys_0_q1;
        keys_0_load_reg_1826 <= keys_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_18)) begin
        keys_0_load_2_reg_1848 <= keys_0_q1;
        keys_0_load_3_reg_1854 <= keys_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20) & (1'b0 == tmp_10_reg_1860))) begin
        p_offset3_reg_1869 <= p_offset3_fu_1269_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (tmp_3_reg_1707 == 1'b0))) begin
        sel_tmp1_reg_1777 <= sel_tmp1_fu_1103_p2;
        sel_tmp2_reg_1784 <= sel_tmp2_fu_1108_p2;
        sel_tmp_reg_1771 <= sel_tmp_fu_1098_p2;
        tmp_9_reg_1766 <= tmp_9_fu_1092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15) & (ap_reg_ppstg_tmp_3_reg_1707_pp0_iter4 == 1'b0))) begin
        sel_tmp3_reg_1806 <= sel_tmp3_fu_1187_p2;
        tmp_4_i_reg_1801 <= tmp_4_i_fu_1181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15) & (tmp_3_reg_1707 == 1'b0))) begin
        str_0_load_1_reg_1751 <= str_0_q1;
        str_0_load_reg_1746 <= str_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_10_reg_1860) & (1'b1 == ap_sig_cseq_ST_pp1_stg3_fsm_22) & (1'b0 == tmp_16_reg_1904))) begin
        tmp_17_reg_1913 <= tmp_17_fu_1378_p2;
        tmp_38_reg_1919 <= tmp_38_fu_1388_p1;
        tmp_3_i2_reg_1924 <= {{x_assign_2_fu_1383_p2[ap_const_lv32_1F : ap_const_lv32_F]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1941) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26))) begin
        tmp_26_reg_2024 <= tmp_26_fu_1688_p2;
        tmp_66_1_reg_2009 <= tmp_66_1_fu_1662_p2;
        tmp_66_2_reg_2014 <= tmp_66_2_fu_1666_p2;
        tmp_66_3_reg_2019 <= tmp_66_3_fu_1671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond3_reg_1941) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27))) begin
        tmp_28_reg_2032 <= tmp_28_fu_1699_p2;
        tmp_29_reg_2037 <= tmp_29_fu_1703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b0 == tmp_10_reg_1860) & (1'b0 == tmp_16_reg_1904))) begin
        tmp_51_2_reg_1929 <= tmp_51_2_fu_1476_p2;
        tmp_51_3_reg_1935 <= tmp_51_3_fu_1508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (ap_reg_ppstg_tmp_3_reg_1707_pp0_iter3 == 1'b0))) begin
        x_assign_reg_1795 <= grp_fu_1139_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st48_fsm_28))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_28)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_97) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_159) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_258) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_277) begin
        ap_sig_cseq_ST_pp1_stg1_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg1_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_296) begin
        ap_sig_cseq_ST_pp1_stg2_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg2_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_318) begin
        ap_sig_cseq_ST_pp1_stg3_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg3_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_339) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_371) begin
        ap_sig_cseq_ST_pp2_stg1_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp2_stg1_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_394) begin
        ap_sig_cseq_ST_pp2_stg2_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp2_stg2_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_410) begin
        ap_sig_cseq_ST_pp2_stg3_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp2_stg3_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_574) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_585) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_596) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_607) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_420) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_46) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_486) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_223) begin
        ap_sig_cseq_ST_st31_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_234) begin
        ap_sig_cseq_ST_st32_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_248) begin
        ap_sig_cseq_ST_st33_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_497) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_444) begin
        ap_sig_cseq_ST_st40_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1193) begin
        ap_sig_cseq_ST_st48_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_508) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_519) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_530) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_541) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_552) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_563) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26))) begin
        hash_address0 = ap_reg_ppstg_hash_addr_34_reg_1981_pp2_iter1;
    end else if (((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27))) begin
        hash_address0 = hash_addr_32_reg_1956;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        hash_address0 = ap_const_lv64_1A;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        hash_address0 = ap_const_lv64_18;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        hash_address0 = ap_const_lv64_16;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        hash_address0 = ap_const_lv64_14;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        hash_address0 = ap_const_lv64_12;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        hash_address0 = ap_const_lv64_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        hash_address0 = ap_const_lv64_E;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        hash_address0 = ap_const_lv64_C;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        hash_address0 = ap_const_lv64_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        hash_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        hash_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        hash_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        hash_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        hash_address0 = ap_const_lv64_0;
    end else if (((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg1_fsm_25))) begin
        hash_address0 = tmp_46_fu_1622_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it0))) begin
        hash_address0 = tmp_42_fu_1576_p1;
    end else if ((((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg3_fsm_22)) | ((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20)))) begin
        hash_address0 = hash_addr_30_reg_1894;
    end else if ((((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg2_fsm_21)) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1)))) begin
        hash_address0 = hash_addr_28_reg_1879;
    end else begin
        hash_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26))) begin
        hash_address1 = ap_reg_ppstg_hash_addr_35_reg_1986_pp2_iter1;
    end else if (((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27))) begin
        hash_address1 = hash_addr_33_reg_1961;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1))) begin
        hash_address1 = hash_addr_29_reg_1889;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        hash_address1 = ap_const_lv64_1B;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        hash_address1 = ap_const_lv64_19;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        hash_address1 = ap_const_lv64_17;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        hash_address1 = ap_const_lv64_15;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        hash_address1 = ap_const_lv64_13;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        hash_address1 = ap_const_lv64_11;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        hash_address1 = ap_const_lv64_F;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        hash_address1 = ap_const_lv64_D;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        hash_address1 = ap_const_lv64_B;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        hash_address1 = ap_const_lv64_9;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        hash_address1 = ap_const_lv64_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        hash_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        hash_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        hash_address1 = ap_const_lv64_1;
    end else if (((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg1_fsm_25))) begin
        hash_address1 = tmp_48_fu_1636_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it0))) begin
        hash_address1 = tmp_44_fu_1587_p3;
    end else if ((((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg3_fsm_22)) | ((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20)))) begin
        hash_address1 = hash_addr_31_reg_1899;
    end else if (((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg2_fsm_21))) begin
        hash_address1 = tmp_31_cast_fu_1312_p1;
    end else begin
        hash_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg2_fsm_21)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it0)) | ((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg1_fsm_25)) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg3_fsm_22)) | ((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20)) | ((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27)) | ((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26)))) begin
        hash_ce0 = 1'b1;
    end else begin
        hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg2_fsm_21)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it0)) | ((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg1_fsm_25)) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg3_fsm_22)) | ((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20)) | ((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27)) | ((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26)))) begin
        hash_ce1 = 1'b1;
    end else begin
        hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26))) begin
        hash_d0 = tmp_28_reg_2032;
    end else if (((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27))) begin
        hash_d0 = tmp_26_reg_2024;
    end else if (((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20))) begin
        hash_d0 = tmp_53_2_fu_1523_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1))) begin
        hash_d0 = tmp_18_fu_1412_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        hash_d0 = ap_const_lv32_0;
    end else begin
        hash_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26))) begin
        hash_d1 = tmp_29_reg_2037;
    end else if (((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27))) begin
        hash_d1 = tmp_27_fu_1694_p2;
    end else if (((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20))) begin
        hash_d1 = tmp_53_3_fu_1540_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1))) begin
        hash_d1 = tmp_53_1_fu_1442_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        hash_d1 = ap_const_lv32_0;
    end else begin
        hash_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == tmp_10_reg_1860) & (1'b0 == tmp_16_reg_1904)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20) & (1'b0 == tmp_16_reg_1904) & (1'b0 == ap_reg_ppstg_tmp_10_reg_1860_pp1_iter1)) | ((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == exitcond3_reg_1941) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27)) | ((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26) & (1'b0 == ap_reg_ppstg_exitcond3_reg_1941_pp2_iter1)))) begin
        hash_we0 = 1'b1;
    end else begin
        hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == tmp_10_reg_1860) & (1'b0 == tmp_16_reg_1904)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20) & (1'b0 == tmp_16_reg_1904) & (1'b0 == ap_reg_ppstg_tmp_10_reg_1860_pp1_iter1)) | ((1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == exitcond3_reg_1941) & (1'b1 == ap_sig_cseq_ST_pp2_stg3_fsm_27)) | ((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26) & (1'b0 == ap_reg_ppstg_exitcond3_reg_1941_pp2_iter1)))) begin
        hash_we1 = 1'b1;
    end else begin
        hash_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp0_it1) & (tmp_3_reg_1707 == 1'b0))) begin
        i1_phi_fu_926_p4 = i_1_reg_1741;
    end else begin
        i1_phi_fu_926_p4 = i1_reg_922;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == tmp_10_reg_1860) & (1'b0 == tmp_16_reg_1904))) begin
        i4_phi_fu_949_p4 = i_reg_1908;
    end else begin
        i4_phi_fu_949_p4 = i4_reg_945;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == exitcond3_reg_1941))) begin
        i6_phi_fu_961_p4 = i_2_reg_1945;
    end else begin
        i6_phi_fu_961_p4 = i6_reg_957;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it0))) begin
        indices_address0 = tmp_20_fu_1563_p1;
    end else if (((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20))) begin
        indices_address0 = tmp_13_fu_1277_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it0))) begin
        indices_address0 = tmp_11_fu_1236_p1;
    end else begin
        indices_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp1_it0) & (1'b1 == ap_sig_cseq_ST_pp1_stg1_fsm_20)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it0)) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it0)))) begin
        indices_ce0 = 1'b1;
    end else begin
        indices_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_24) & (1'b1 == ap_reg_ppiten_pp2_it0))) begin
        indices_ce1 = 1'b1;
    end else begin
        indices_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15))) begin
        keys_0_address0 = newIndex8_fu_1224_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_17)) begin
        keys_0_address0 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_16)) begin
        keys_0_address0 = ap_const_lv64_0;
    end else begin
        keys_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_17)) begin
        keys_0_address1 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_16)) begin
        keys_0_address1 = ap_const_lv64_1;
    end else begin
        keys_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_16) | (1'b1 == ap_sig_cseq_ST_st32_fsm_17) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)))) begin
        keys_0_ce0 = 1'b1;
    end else begin
        keys_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_16) | (1'b1 == ap_sig_cseq_ST_st32_fsm_17))) begin
        keys_0_ce1 = 1'b1;
    end else begin
        keys_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15) & (ap_reg_ppstg_tmp_3_reg_1707_pp0_iter7 == 1'b0))) begin
        keys_0_we0 = 1'b1;
    end else begin
        keys_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_19) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == tmp_10_reg_1860) & (1'b0 == tmp_16_reg_1904))) begin
        offset3_phi_fu_937_p4 = p_offset3_reg_1869;
    end else begin
        offset3_phi_fu_937_p4 = offset3_reg_933;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)) begin
            str_0_address0 = newIndex5_fu_1033_p1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14)) begin
            str_0_address0 = newIndex1_fu_996_p1;
        end else begin
            str_0_address0 = 'bx;
        end
    end else begin
        str_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it0)) begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)) begin
            str_0_address1 = newIndex6_fu_1038_p1;
        end else if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14)) begin
            str_0_address1 = newIndex3_fu_1007_p1;
        end else begin
            str_0_address1 = 'bx;
        end
    end else begin
        str_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp0_it0)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)))) begin
        str_0_ce0 = 1'b1;
    end else begin
        str_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp0_it0)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15)))) begin
        str_0_ce1 = 1'b1;
    end else begin
        str_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_14;
        end
        ap_ST_pp0_stg0_fsm_14 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(tmp_3_fu_968_p3 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st31_fsm_16;
            end
        end
        ap_ST_pp0_stg1_fsm_15 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_15) & ~(1'b1 == ap_reg_ppiten_pp0_it6))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st31_fsm_16;
            end
        end
        ap_ST_st31_fsm_16 : begin
            ap_NS_fsm = ap_ST_st32_fsm_17;
        end
        ap_ST_st32_fsm_17 : begin
            ap_NS_fsm = ap_ST_st33_fsm_18;
        end
        ap_ST_st33_fsm_18 : begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_19;
        end
        ap_ST_pp1_stg0_fsm_19 : begin
            ap_NS_fsm = ap_ST_pp1_stg1_fsm_20;
        end
        ap_ST_pp1_stg1_fsm_20 : begin
            ap_NS_fsm = ap_ST_pp1_stg2_fsm_21;
        end
        ap_ST_pp1_stg2_fsm_21 : begin
            if (~((1'b1 == ap_reg_ppiten_pp1_it0) & (~(1'b0 == tmp_10_reg_1860) | ((1'b0 == tmp_10_reg_1860) & ~(1'b0 == tmp_16_fu_1339_p2))))) begin
                ap_NS_fsm = ap_ST_pp1_stg3_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st40_fsm_23;
            end
        end
        ap_ST_pp1_stg3_fsm_22 : begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_19;
        end
        ap_ST_st40_fsm_23 : begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_24;
        end
        ap_ST_pp2_stg0_fsm_24 : begin
            if (~((1'b1 == ap_reg_ppiten_pp2_it0) & ~(1'b0 == exitcond3_fu_1547_p2) & ~(1'b1 == ap_reg_ppiten_pp2_it1))) begin
                ap_NS_fsm = ap_ST_pp2_stg1_fsm_25;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_28;
            end
        end
        ap_ST_pp2_stg1_fsm_25 : begin
            ap_NS_fsm = ap_ST_pp2_stg2_fsm_26;
        end
        ap_ST_pp2_stg2_fsm_26 : begin
            if (~((1'b1 == ap_reg_ppiten_pp2_it1) & (1'b1 == ap_sig_cseq_ST_pp2_stg2_fsm_26) & ~(1'b1 == ap_reg_ppiten_pp2_it0))) begin
                ap_NS_fsm = ap_ST_pp2_stg3_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_28;
            end
        end
        ap_ST_pp2_stg3_fsm_27 : begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_24;
        end
        ap_ST_st48_fsm_28 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_1193 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_159 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_223 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_234 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_248 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_258 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_277 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_296 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_318 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_339 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_371 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_394 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_410 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_420 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_444 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_46 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_486 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_497 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_508 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_519 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_530 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_541 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_552 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_563 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_574 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_585 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_596 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_607 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_97 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

assign exitcond3_fu_1547_p2 = ((i6_phi_fu_961_p4 == ap_const_lv3_7) ? 1'b1 : 1'b0);

assign grp_fu_1139_p1 = ((or_cond_fu_1120_p2[0:0] === 1'b1) ? newSel_fu_1113_p3 : newSel1_fu_1124_p3);

assign grp_fu_1218_p0 = ((or_cond1_fu_1199_p2[0:0] === 1'b1) ? newSel3_fu_1192_p3 : newSel4_fu_1203_p3);

assign i6_cast_fu_1559_p1 = i6_phi_fu_961_p4;

assign i_1_fu_1022_p2 = (ap_const_lv7_4 + i1_phi_fu_926_p4);

assign i_2_fu_1553_p2 = (i6_phi_fu_961_p4 + ap_const_lv3_1);

assign i_fu_1345_p2 = (ap_const_lv12_4 + i4_reg_945);

assign indices_address1 = tmp_23_fu_1612_p1;

assign len_fu_1652_p2 = (indices_q0 - tmp_24_fu_1645_p3);

assign newIndex1_fu_996_p1 = newIndex_fu_990_p2;

assign newIndex2_fu_1001_p2 = (tmp_5_fu_986_p1 | ap_const_lv6_2);

assign newIndex3_fu_1007_p1 = newIndex2_fu_1001_p2;

assign newIndex4_fu_1028_p2 = (tmp_5_reg_1720 | ap_const_lv6_1);

assign newIndex5_fu_1033_p1 = newIndex4_fu_1028_p2;

assign newIndex6_fu_1038_p1 = tmp_5_reg_1720;

assign newIndex8_fu_1224_p1 = ap_reg_ppstg_newIndex7_reg_1736_pp0_iter7;

assign newIndex_fu_990_p2 = (tmp_5_fu_986_p1 | ap_const_lv6_3);

assign newSel1_fu_1124_p3 = ((sel_tmp_reg_1771[0:0] === 1'b1) ? ap_const_lv32_239B961B : ap_const_lv32_A1E38B93);

assign newSel3_fu_1192_p3 = ((ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter4[0:0] === 1'b1) ? ap_const_lv32_38B34AE5 : ap_const_lv32_AB0E9789);

assign newSel4_fu_1203_p3 = ((sel_tmp3_reg_1806[0:0] === 1'b1) ? ap_const_lv32_239B961B : ap_const_lv32_A1E38B93);

assign newSel_fu_1113_p3 = ((sel_tmp2_reg_1784[0:0] === 1'b1) ? ap_const_lv32_38B34AE5 : ap_const_lv32_AB0E9789);

assign offset_fu_1263_p2 = (ap_const_lv32_1 + offset3_reg_933);

assign or_cond1_fu_1199_p2 = (ap_reg_ppstg_sel_tmp1_reg_1777_pp0_iter4 | ap_reg_ppstg_sel_tmp_reg_1771_pp0_iter4);

assign or_cond_fu_1120_p2 = (sel_tmp2_reg_1784 | sel_tmp1_reg_1777);

assign p_offset3_fu_1269_p3 = ((tmp_12_fu_1257_p2[0:0] === 1'b1) ? offset_fu_1263_p2 : offset3_reg_933);

assign r_assign_fu_1147_p2 = (ap_const_lv5_F + tmp_18_cast_fu_1144_p1);

assign sel_tmp1_fu_1103_p2 = ((index_reg_1711 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_1108_p2 = ((index_reg_1711 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_1187_p2 = ((ap_reg_ppstg_index_reg_1711_pp0_iter4 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign sel_tmp_fu_1098_p2 = ((index_reg_1711 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp1_fu_1082_p2 = ($signed(tmp_10_cast_fu_1068_p1) + $signed(tmp_11_cast_fu_1072_p1));

assign tmp21_cast_fu_1088_p1 = $signed(tmp1_fu_1082_p2);

assign tmp2_fu_1407_p2 = (ap_const_lv32_561CCD1B + tmp_17_reg_1913);

assign tmp3_fu_1436_p2 = (ap_const_lv32_BCAA747 + tmp_51_1_fu_1425_p2);

assign tmp4_fu_1518_p2 = ($signed(ap_const_lv32_96CD1C35) + $signed(tmp_51_2_reg_1929));

assign tmp5_fu_1535_p2 = (ap_const_lv32_32AC3B17 + tmp_51_3_reg_1935);

assign tmp6_fu_1676_p2 = (tmp_66_2_fu_1666_p2 + tmp_66_1_fu_1662_p2);

assign tmp7_fu_1682_p2 = (tmp_66_3_fu_1671_p2 + tmp_25_fu_1658_p2);

assign tmp_10_cast_fu_1068_p1 = $signed(tmp_7_fu_1060_p3);

assign tmp_11_cast_fu_1072_p1 = $signed(str_0_q1);

assign tmp_11_fu_1236_p1 = $signed(offset3_phi_fu_937_p4);

assign tmp_12_fu_1257_p2 = (($signed(tmp_33_cast_fu_1253_p1) > $signed(indices_q0)) ? 1'b1 : 1'b0);

assign tmp_13_fu_1277_p1 = $signed(p_offset3_fu_1269_p3);

assign tmp_14_fu_1282_p3 = {{p_offset3_fu_1269_p3}, {ap_const_lv2_0}};

assign tmp_15_fu_1290_p1 = $signed(tmp_14_fu_1282_p3);

assign tmp_16_fu_1339_p2 = ((indices_q0 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_17_fu_1378_p2 = (keys_0_load_1_reg_1832 ^ tmp_4_i1_fu_1370_p3);

assign tmp_18_cast_fu_1144_p1 = ap_reg_ppstg_index_reg_1711_pp0_iter4;

assign tmp_18_fu_1412_p2 = (tmp2_fu_1407_p2 + tmp_37_fu_1402_p2);

assign tmp_1_i_fu_1161_p2 = x_assign_reg_1795 << tmp_i_fu_1153_p1;

assign tmp_20_fu_1563_p1 = i6_phi_fu_961_p4;

assign tmp_21_fu_1596_p2 = ((i6_phi_fu_961_p4 == ap_const_lv3_0) ? 1'b1 : 1'b0);

assign tmp_22_fu_1602_p2 = ($signed(i6_cast_fu_1559_p1) + $signed(ap_const_lv4_F));

assign tmp_23_fu_1612_p1 = $unsigned(tmp_54_cast_fu_1608_p1);

assign tmp_24_fu_1645_p3 = ((tmp_21_reg_1971[0:0] === 1'b1) ? ap_const_lv32_0 : indices_q1);

assign tmp_25_fu_1658_p2 = (hash_load_4_reg_1999 ^ len_reg_1991);

assign tmp_26_fu_1688_p2 = (tmp6_fu_1676_p2 + tmp7_fu_1682_p2);

assign tmp_27_fu_1694_p2 = (tmp_66_1_reg_2009 + tmp_26_reg_2024);

assign tmp_28_fu_1699_p2 = (tmp_66_2_reg_2014 + tmp_26_reg_2024);

assign tmp_29_fu_1703_p2 = (tmp_66_3_reg_2019 + tmp_26_reg_2024);

assign tmp_2_i_cast_fu_1172_p1 = tmp_2_i_fu_1166_p2;

assign tmp_2_i_fu_1166_p2 = ($signed(ap_const_lv6_20) - $signed(tmp_i_cast_fu_1157_p1));

assign tmp_30_cast_fu_1299_p3 = {{tmp_35_reg_1874}, {ap_const_lv2_0}};

assign tmp_30_fu_1306_p2 = (tmp_30_cast_fu_1299_p3 | ap_const_lv6_1);

assign tmp_31_cast_fu_1312_p1 = tmp_30_fu_1306_p2;

assign tmp_31_fu_1317_p2 = (tmp_30_cast_fu_1299_p3 | ap_const_lv6_2);

assign tmp_32_cast_fu_1323_p1 = $signed(tmp_31_fu_1317_p2);

assign tmp_32_fu_1328_p2 = (tmp_30_cast_fu_1299_p3 | ap_const_lv6_3);

assign tmp_33_cast1_fu_1334_p1 = $signed(tmp_32_fu_1328_p2);

assign tmp_33_cast_fu_1253_p1 = tmp_s_fu_1245_p3;

assign tmp_33_fu_1568_p3 = {{i6_phi_fu_961_p4}, {ap_const_lv2_0}};

assign tmp_34_fu_1241_p1 = i4_reg_945[10:0];

assign tmp_35_fu_1295_p1 = p_offset3_fu_1269_p3[3:0];

assign tmp_36_fu_1356_p1 = x_assign_1_fu_1351_p2[12:0];

assign tmp_37_fu_1402_p2 = tmp_17_reg_1913 << ap_const_lv32_2;

assign tmp_38_fu_1388_p1 = x_assign_2_fu_1383_p2[14:0];

assign tmp_39_fu_1430_p2 = tmp_51_1_fu_1425_p2 << ap_const_lv32_2;

assign tmp_3_fu_968_p3 = i1_phi_fu_926_p4[ap_const_lv32_6];

assign tmp_3_i1_fu_1360_p4 = {{x_assign_1_fu_1351_p2[ap_const_lv32_1F : ap_const_lv32_D]}};

assign tmp_3_i3_fu_1458_p4 = {{x_assign_3_fu_1449_p2[ap_const_lv32_1F : ap_const_lv32_11]}};

assign tmp_3_i4_fu_1490_p4 = {{x_assign_4_fu_1481_p2[ap_const_lv32_1F : ap_const_lv32_13]}};

assign tmp_3_i_fu_1176_p2 = x_assign_reg_1795 >> tmp_2_i_cast_fu_1172_p1;

assign tmp_40_fu_1454_p1 = x_assign_3_fu_1449_p2[16:0];

assign tmp_41_fu_1513_p2 = tmp_51_2_reg_1929 << ap_const_lv32_2;

assign tmp_42_fu_1576_p1 = tmp_33_fu_1568_p3;

assign tmp_43_fu_1581_p2 = (tmp_33_fu_1568_p3 | ap_const_lv5_1);

assign tmp_44_fu_1587_p3 = {{ap_const_lv59_0}, {tmp_43_fu_1581_p2}};

assign tmp_45_fu_1617_p2 = (tmp_33_reg_1950 | ap_const_lv5_2);

assign tmp_46_fu_1622_p3 = {{ap_const_lv59_0}, {tmp_45_fu_1617_p2}};

assign tmp_47_fu_1631_p2 = (tmp_33_reg_1950 | ap_const_lv5_3);

assign tmp_48_fu_1636_p3 = {{ap_const_lv59_0}, {tmp_47_fu_1631_p2}};

assign tmp_4_i1_fu_1370_p3 = {{tmp_36_fu_1356_p1}, {tmp_3_i1_fu_1360_p4}};

assign tmp_4_i2_fu_1419_p3 = {{tmp_38_reg_1919}, {tmp_3_i2_reg_1924}};

assign tmp_4_i3_fu_1468_p3 = {{tmp_40_fu_1454_p1}, {tmp_3_i3_fu_1458_p4}};

assign tmp_4_i4_fu_1500_p3 = {{tmp_50_fu_1486_p1}, {tmp_3_i4_fu_1490_p4}};

assign tmp_4_i_fu_1181_p2 = (tmp_3_i_fu_1176_p2 | tmp_1_i_fu_1161_p2);

assign tmp_50_fu_1486_p1 = x_assign_4_fu_1481_p2[18:0];

assign tmp_51_1_fu_1425_p2 = (keys_0_load_2_reg_1848 ^ tmp_4_i2_fu_1419_p3);

assign tmp_51_2_fu_1476_p2 = (keys_0_load_3_reg_1854 ^ tmp_4_i3_fu_1468_p3);

assign tmp_51_3_fu_1508_p2 = (keys_0_load_reg_1826 ^ tmp_4_i4_fu_1500_p3);

assign tmp_51_fu_1530_p2 = tmp_51_3_reg_1935 << ap_const_lv32_2;

assign tmp_53_1_fu_1442_p2 = (tmp3_fu_1436_p2 + tmp_39_fu_1430_p2);

assign tmp_53_2_fu_1523_p2 = (tmp4_fu_1518_p2 + tmp_41_fu_1513_p2);

assign tmp_53_3_fu_1540_p2 = (tmp5_fu_1535_p2 + tmp_51_fu_1530_p2);

assign tmp_54_cast_fu_1608_p1 = $signed(tmp_22_fu_1602_p2);

assign tmp_5_fu_986_p1 = i1_phi_fu_926_p4[5:0];

assign tmp_66_1_fu_1662_p2 = (hash_load_5_reg_2004 ^ len_reg_1991);

assign tmp_66_2_fu_1666_p2 = (hash_q0 ^ len_reg_1991);

assign tmp_66_3_fu_1671_p2 = (hash_q1 ^ len_reg_1991);

assign tmp_6_fu_1042_p3 = {{str_0_load_reg_1746}, {ap_const_lv24_0}};

assign tmp_7_fu_1060_p3 = {{str_0_q0}, {ap_const_lv8_0}};

assign tmp_8_cast_fu_1056_p1 = $signed(tmp_8_fu_1049_p3);

assign tmp_8_fu_1049_p3 = {{str_0_load_1_reg_1751}, {ap_const_lv16_0}};

assign tmp_9_fu_1092_p2 = ($signed(tmp21_cast_fu_1088_p1) + $signed(tmp_fu_1076_p2));

assign tmp_fu_1076_p2 = ($signed(tmp_6_fu_1042_p3) + $signed(tmp_8_cast_fu_1056_p1));

assign tmp_i_cast_fu_1157_p1 = r_assign_fu_1147_p2;

assign tmp_i_fu_1153_p1 = r_assign_fu_1147_p2;

assign tmp_s_fu_1245_p3 = {{tmp_34_fu_1241_p1}, {ap_const_lv2_0}};

assign x_assign_1_fu_1351_p2 = (hash_q0 ^ keys_0_load_reg_1826);

assign x_assign_2_fu_1383_p2 = (hash_q1 ^ keys_0_load_1_reg_1832);

assign x_assign_3_fu_1449_p2 = (hash_q0 ^ keys_0_load_2_reg_1848);

assign x_assign_4_fu_1481_p2 = (hash_q1 ^ keys_0_load_3_reg_1854);

always @ (posedge ap_clk) begin
    hash_addr_28_reg_1879[1:0] <= 2'b00;
    hash_addr_29_reg_1889[1:0] <= 2'b01;
    hash_addr_30_reg_1894[1:0] <= 2'b10;
    hash_addr_31_reg_1899[1:0] <= 2'b11;
    tmp_33_reg_1950[1:0] <= 2'b00;
    hash_addr_32_reg_1956[1:0] <= 2'b00;
    hash_addr_33_reg_1961[1:0] <= 2'b01;
    hash_addr_34_reg_1981[1:0] <= 2'b10;
    ap_reg_ppstg_hash_addr_34_reg_1981_pp2_iter1[1:0] <= 2'b10;
    hash_addr_35_reg_1986[1:0] <= 2'b11;
    ap_reg_ppstg_hash_addr_35_reg_1986_pp2_iter1[1:0] <= 2'b11;
end

endmodule //dedup_murmurhash128_new
